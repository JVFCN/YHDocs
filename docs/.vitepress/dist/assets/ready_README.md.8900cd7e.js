import{_ as e,o as a,c as o,V as r}from"./chunks/framework.d3b95951.js";const b=JSON.parse('{"title":"开发须知","description":"","frontmatter":{},"headers":[],"relativePath":"ready/README.md","filePath":"ready/README.md"}'),t={name:"ready/README.md"},i=r('<h1 id="开发须知" tabindex="-1">开发须知 <a class="header-anchor" href="#开发须知" aria-label="Permalink to &quot;开发须知&quot;">​</a></h1><h2 id="基础概念" tabindex="-1">基础概念 <a class="header-anchor" href="#基础概念" aria-label="Permalink to &quot;基础概念&quot;">​</a></h2><p>在开发之前，建议优先浏览开发须知，了解平台的使用逻辑</p><h3 id="机器人" tabindex="-1">机器人 <a class="header-anchor" href="#机器人" aria-label="Permalink to &quot;机器人&quot;">​</a></h3><p>机器人可以理解为一个虚拟用户，可以被多个用户添加为好友。不同用户和机器人的对话是相互隔离, 每个机器人拥有两个主要功能：</p><ol><li>订阅事件功能。任何人发送到机器人的消息都可以推送到订阅URL链接，用于机器人创建者根据用户发送到机器人的消息进行回复。</li><li>通过机器人发送消息给用户。给机器人的好友用户发送或者回复消息</li></ol><h3 id="群" tabindex="-1">群 <a class="header-anchor" href="#群" aria-label="Permalink to &quot;群&quot;">​</a></h3><p>群即常见的群聊功能，每个群也拥有机器人的两个功能，和机器人不同的是，不同用户发送到群的消息任何人都能看到。</p><p>接口参数含义说明<br><code>userId: 用户ID</code><br><code>recvId: 接收消息的用户ID、群ID</code><br><code>recvType: 接收类型，取值user、group</code></p><h3 id="接口调用方式" tabindex="-1">接口调用方式 <a class="header-anchor" href="#接口调用方式" aria-label="Permalink to &quot;接口调用方式&quot;">​</a></h3><p>平台中所有接口都是通过HTTP/HTTPS协议进行数据交互</p><p>HTTP Method： <code>POST</code>、<code>GET</code></p><p>授权：所有接口不需要身份验证及登录等操作，部分接口带有token信息，便于接入，<br> 如token信息泄露可以重置</p><p>频次限制：注意每个接口有不同的频次控制</p><p>机器人开发流程</p><ol><li>在软件中创建机器人</li><li>开发订阅消息接收Web程序，将URL填入官网控制台中（系统会自动推送机器人消息到该URL）</li><li>从官网控制台中查看机器人发送消息URL</li><li>在订阅消息的Web程序中收到系统推送的消息后，根据消息内容或指令进行消息回复</li></ol>',16),l=[i];function d(c,n,s,h,p,_){return a(),o("div",null,l)}const T=e(t,[["render",d]]);export{b as __pageData,T as default};
